c
cc
c
self.movie && self.movie.comments.where(user: self.user).count
c
self.movie && self.movie.comments.where(user: self.user).count
c
self.movie && self.movie.comments.where(user: self.user).count
c
self.movie && self.movie.comments.where(user: self.user).count
c
self.movie && self.movie.comments.where(user: self.user).count
c
self.movie && self.movie.comments.where(user: self.user).count
self
c
self
self.movie && self.movie.comments.where(user: self.user).count
(self.movie && self.movie.comments.where(user: self.user).count
(self.movie && self.movie.comments.where(user: self.user).count > 0)
c
self
c
c = create( :comment, user_id: 1, movie_id: 1, body: 'ddd')
c = create( :comment, user_id: 1, movie_id: 1, body: '')
c.valid?
c = create( :comment, user_id: 1, movie_id: 1)
c.id
c = create( :comment, user_id: 1, movie_id: 1).valid?
c = create(comment:, user_id: 1, movie_id: 1).valid?
comment2
comment2.valid?
c
comment2.valid?
comment2
comment1
c
comment2
comment12
comment1
c
comment2
comment1
c
tr = page.find_all(:css, 'tr')[0]
tr = page.find_all(:css, 'tr')
tr.first
tr
expect(p).to have_css('td.name', text: 'John Smith')
p = page.find_all(:css, 'tr').first
page.find_all(:css, 'tr').first
page.find(:css, 'tr').first
p.first
p.first]
p = page.find(:css, 'tr')
c
puts page.body
puts page.page
c
puts page.body
c
movies[0].id
movies[1].id
movies[1]
movies.inspect
movies.count
c
puts page.body
put page
page
render page
page
c
Comment.count
Comment
c
Comment.first
c
Comment.first
@comment.destroy
@comment = @user.comments.find(params[:id])
@user = current_user
Comment.first
params
c
Comment.first
params
c
Comment.last
User.first
User.last
@comment = @user
@comment = @user.comments.last
@comment = @user.comments.first
@comment = @user.comments
@comment = @user.comments.find(params[:id])
@user = current_user
params
current_user
c
params
c
self
c
self
c
current_user
c
current_user
c
current_user
c
current_user
c
current_user
c
current_user
c
current_user
c
self
c
current_user
c
current_user
c
current_user
c
session[user_id]
session
session[user_id]
c
current_user
c
session[user_id]
current_user
c
current_user
c
current_user
c
current_user = User.find(1)
current_user = @user
current_user
c
current_user
c
login_as @user
log_as @user
log_in @user
current_user
c
session[:user]
session[:user] = 1
current_user
c
request.session[:user]
request.session[:user] = user.id
current_user
c
sign_in @user
User.find(1)
@user
session[:user]
c
self
c
user
current_user
c
current_user
@comment.user = current_user
comment_params
@comment
@commnte
c
current_user
@user
c
@comment.user
c
sign_in user
login_user
controller.current_user = user
controller.current_user
subject.current_user
loged_in?
loged_id?
current_user
current
user
c
current_user
comment_params
c
params
comment_params
@comment
comment_params
c
sign_in user
sign_in
sign_me_in
user
current_user
login_user
c
self
c
self
c
self
c
login_as(user, scope: :user)
@movie
@movie = movie
c
params
c
comments = self.comments.where(user: self.user).first
self.movie.comments_for_this_user(self.user)
self.movie.comments_for_this_user(self.user).class
self.movie.comments_for_this_user(self.user).count
c
self.movie.comments_for_this_user(self.user)
self.movie
self.user
c
@comment
@comments
c
@comment
comment
c
action
comment
@comment
c
comment
@comment
c
@comment
c
@comment
c
@comment
c
params
c
@comment
c
@comment
c
=@ad
=ad
ad
